from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from flask import Flask, request
import asyncio
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.utils import formataddr
from email.mime.image import MIMEImage
import re
import os

# =============== C·∫§U H√åNH ===============
BOT_TOKEN = "7965854829:AAGQ8Y3mTi_0719bbSrf-sAMV6H2sG5of7Q"
WEBHOOK_URL = "https://your-render-app-name.onrender.com/webhook"  # ‚ö†Ô∏è S·ª≠a l·∫°i URL n√†y
SENDER_EMAIL = "bankm7247@gmail.com"
SENDER_NAME = "MB eBanking"
PASSWORD = "jvsk apqd udzn unaf"
ADMIN_CHAT_ID = 7417918579

# =============== H√ÄM H·ªñ TR·ª¢ ===============
def format_vnd(amount):
    return "{:,.0f} VNƒê".format(amount)

async def huongdan(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "üí° *H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng l·ªánh /sendmail*\n\n"
        "C√∫ ph√°p:\n"
        "`/sendmail tenbank=T√äN_BANK mailsend=email@gmail.com tienback=12000000 "
        "timeGiaoDich=12:32:45 ngayketthuc=31/10/2025 tongkeo=114000000`\n\n"
        "‚û°Ô∏è V√≠ d·ª•:\n"
        "`/sendmail tenbank=LE VAN A mailsend=test@gmail.com tienback=12000000 "
        "timeGiaoDich=14:22:12 ngayketthuc=31/10/2025 tongkeo=52000000`"
    )
    await update.message.reply_text(text, parse_mode="Markdown")

async def send_email(data):
    tenbank = data.get("tenbank", "")
    tienback = int(data.get("tienback", 0))
    mailsend = data.get("mailsend", "")
    timeGiaoDich = data.get("timeGiaoDich", "")
    ngayketthuc = data.get("ngayketthuc", "")
    tongkeo = format_vnd(int(data.get("tongkeo", 0)))

    msg = MIMEMultipart("related")
    msg["Subject"] = "TH√îNG B√ÅO TREO GIAO D·ªäCH"
    msg["From"] = formataddr((SENDER_NAME, SENDER_EMAIL))
    msg["To"] = mailsend

    tienchuyen = format_vnd(tienback)

    html = f"""
    <html>
      <body style="font-family: Arial, Verdana, sans-serif; margin:0; padding:0;">
        <div style="max-width:600px; margin:auto; padding:0;">
          <p style="font-size:16px; font-weight:bold; margin:3px 0 3px 0;">
            K√≠nh g·ª≠i Qu√Ω kh√°ch h√†ng <span style="text-transform:uppercase;">{tenbank}</span>
          </p>
          <div style="margin-bottom:18px;">
            <img src="cid:logo1" style="width:100%; max-width:600px; display:block; margin:0 auto;"/>
          </div>
          <p style="font-size:15px; font-weight:bold; margin-bottom:5px;">
            C·∫£m ∆°n Qu√Ω kh√°ch ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• MB eBanking.
          </p>
          <p style="font-size:15px; margin-bottom:-3px;">
            MB xin th√¥ng b√°o giao d·ªãch c·ªßa Qu√Ω kh√°ch ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán nh∆∞ sau:
          </p>
          <p style="font-size:15px; margin-bottom:10px;">
            Hi·ªán t·∫°i, giao d·ªãch c·ªßa Qu√Ω kh√°ch ƒëang th·ª±c hi·ªán v√†o l√∫c <b>{timeGiaoDich}</b> v·ªõi n·ªôi dung "<b>{tenbank}</b> chuyen tien" ƒëang t·∫°m th·ªùi ƒë∆∞·ª£c treo ƒë·ªÉ ph·ª•c v·ª• c√¥ng t√°c r√† so√°t v√† ƒë·∫£m b·∫£o an to√†n h·ªá th·ªëng v√¨ nh·∫≠n th·∫•y giao d·ªãch c·ªßa Qu√Ω kh√°ch ch∆∞a ƒë·ªß lu·ªìng, v√¨ v·∫≠y h·ªá th·ªëng s·∫Ω t·∫°m th·ªùi gi·ªØ l·∫°i giao d·ªãch n√†y cho ƒë·∫øn khi ƒë∆∞·ª£c b·ªï sung.
          </p>
          <p style="font-size:15px; margin-bottom:10px;">
            ƒê·ªÉ ti·∫øp t·ª•c x·ª≠ l√Ω, Qu√Ω kh√°ch vui l√≤ng y√™u c·∫ßu b√™n nh·∫≠n ti·ªÅn chuy·ªÉn b·ªï sung s·ªë ti·ªÅn l√† <b>{tienchuyen}</b> tr∆∞·ªõc <b>00:00:00</b> ng√†y <b>{ngayketthuc}</b>. Sau th·ªùi h·∫°n tr√™n, h·ªá th·ªëng s·∫Ω kh√¥ng th·ªÉ ghi nh·∫≠n giao d·ªãch v√† kho·∫£n ti·ªÅn <b>{tongkeo}</b> ƒë√£ chuy·ªÉn s·∫Ω ƒë∆∞·ª£c ho√†n l·∫°i.
          </p>
          <p style="font-size:15px; margin-bottom:-3px;">
            Ch√∫ng t√¥i r·∫•t xin l·ªói v·ªÅ s·ª± b·∫•t ti·ªán n√†y v√† mong Qu√Ω Kh√°ch th√¥ng c·∫£m.
          </p>
          <p style="font-size:15px; margin-bottom:10px;">
            Tr√¢n tr·ªçng.<br>
            Ng√¢n h√†ng MB
          </p>
          <div style="margin-top:24px;">
            <img src="cid:footer" style="width:100%; max-width:600px; display:block; margin:0 auto;"/>
          </div>
        </div>
      </body>
    </html>
    """

    msg.attach(MIMEText(html, "html", "utf-8"))

    try:
        with open("image/logo1.png", "rb") as img:
            logo = MIMEImage(img.read())
            logo.add_header("Content-ID", "<logo1>")
            msg.attach(logo)
    except FileNotFoundError:
        pass

    with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
        server.login(SENDER_EMAIL, PASSWORD)
        server.sendmail(SENDER_EMAIL, mailsend, msg.as_string())

async def sendmail(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        text = " ".join(context.args)
        if not text:
            await update.message.reply_text("‚ö†Ô∏è Thi·∫øu tham s·ªë. G√µ /huongdan ƒë·ªÉ xem h∆∞·ªõng d·∫´n.")
            return

        parts = re.split(r" (?=\w+=)", text.strip())
        data = {k: v for k, v in (p.split("=", 1) for p in parts if "=" in p)}

        data["tienback"] = int(data["tienback"].replace(",", "").replace(".", ""))
        data["tongkeo"] = int(data["tongkeo"].replace(",", "").replace(".", ""))

        await update.message.reply_text("‚è≥ ƒêang g·ª≠i email...")
        await send_email(data)
        await update.message.reply_text("‚úÖ ƒê√£ g·ª≠i email th√†nh c√¥ng!")

        if ADMIN_CHAT_ID:
            await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"Ng∆∞·ªùi d√πng v·ª´a g·ª≠i email t·ªõi {data['mailsend']}")
    except Exception as e:
        await update.message.reply_text(f"‚ùå L·ªói: {e}")

# =============== CH·∫†Y BOT (WEBHOOK MODE) ===============
flask_app = Flask(__name__)
application = Application.builder().token(BOT_TOKEN).build()
application.add_handler(CommandHandler("sendmail", sendmail))
application.add_handler(CommandHandler("huongdan", huongdan))

@flask_app.route("/webhook", methods=["POST"])
async def webhook():
    update = Update.de_json(request.get_json(force=True), application.bot)
    await application.process_update(update)
    return "ok"

@flask_app.route("/")
def index():
    return "‚úÖ Bot ƒëang ch·∫°y v·ªõi webhook."

async def main():
    await application.bot.set_webhook(WEBHOOK_URL)
    print("üöÄ Webhook ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p:", WEBHOOK_URL)

if __name__ == "__main__":
    asyncio.run(main())
    flask_app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
